//dosya ismini [] yapma sebebimiz dynamic routes
import { ICharacters } from "../../types/types";
import Image from "next/image";
import { useRouter } from "next/router";
import imageLoader from "../../imageLoader";
import { GetServerSideProps } from "next";
import Layout from "../../components/Layout";
import styles from "../../styles/CharacterDetails.module.css";
import React from "react";
import Head from "next/head";

function CharacterPage({ character }: { character: ICharacters }) {
  const router = useRouter();

  return (
    <div className={styles.container}>
      <Head>
        <title>Characters Details</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/details.jpg" />
      </Head>

      <button className={styles.btn} onClick={() => router.back()}>
        for the previous page
      </button>

      <div className={styles.content}>
        <h1>{character.name}</h1>

        <Image
          loader={imageLoader}
          unoptimized
          src={character.image}
          alt={character.name}
          width="50"
          height="200px"
        />

        <span className={styles.parag}>
          <Image
            loader={imageLoader}
            unoptimized
            src="/circle.png"
            alt="icon"
            width="20px"
            height="2px"
          />
          <p className={styles.write}>
            {character.status} - {character.species}
          </p>
        </span>

        <p className={styles.parag}>
          <Image
            loader={imageLoader}
            unoptimized
            src="/name.png"
            alt="icon"
            width="20px"
            height="20px"          
          />
          <span className={styles.write}>Gender:{character.gender}</span>
        </p>

        <p className={styles.parag}>
          <Image
            loader={imageLoader}
            unoptimized
            src="/equality.png"
            alt="icon"
            width="20px"
            height="20px"
          />
          <span className={styles.write}> Origin Name: {character.origin.name}</span>
        </p>

        <p className={styles.parag}>
          <Image
            loader={imageLoader}
            unoptimized
            src="/character.png"
            alt="icon"
            width="20px"
            height="20px"
          />
          <span className={styles.write}>
            Character Type: {character.type ? character.type : "Type unknown"}
          </span>
        </p>

        <p className={styles.parag}>
          <Image
            loader={imageLoader}
            unoptimized
            src="/location.png"
            alt="icon"
            width="20px"
            height="20px"
          />
          <span className={styles.write}>
            Last know location : {character.location.name}
          </span>
        </p>
      </div>
    </div>
  );
}

CharacterPage.getLayout = function getLayout(page: React.ReactElement) {
  return <Layout>{page}</Layout>;
};

//serverSide props sadece server da çalışır.
export const getServerSideProps: GetServerSideProps = async (context) => {
  const res = await fetch(
    `https://rickandmortyapi.com/api/character/${context.query.id}`
  );

  const character = await res.json();

  return {
    props: {
      character,
    },
  };
};
export default CharacterPage;
